<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="classpath*:basic-config.properties" file-encoding="UTF-8"/>

    <!-- Dal/biz配置。 -->
    <import resource="classpath*:dal-config.xml"/>

    <!--扫描服务,自动注解 -->
    <context:component-scan base-package="com.pikaqiu.manage.biz.impl">
        <context:include-filter type="regex" expression=".*ServiceImpl"/>
    </context:component-scan>

    <!-- 启用注解驱动缓存 -->
    <cache:annotation-driven/>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate"/>
    </bean>

    <!-- 注意此处注入的是JedisPoolConfig，说明SDR还依赖与Jedis -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis_pool_maxTotal}"></property>
        <property name="maxIdle" value="${redis_pool_maxIdle}"></property>
        <property name="minIdle" value="${redis_pool_minIdle}"></property>
        <property name="maxWaitMillis" value="${redis_pool_maxWaitMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${redis_minEvictableIdleTimeMillis}"></property>
        <property name="numTestsPerEvictionRun" value="${redis_numTestsPerEvictionRun}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${redis_timeBetweenEvictionRunsMillis}"></property>
        <property name="testOnBorrow" value="${redis_pool_testOnBorrow}"></property>
        <property name="testOnReturn" value="${redis_pool_testOnReturn}"></property>
        <property name="testWhileIdle" value="${redis_testWhileIdle}"></property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis_host}"/>
        <property name="port" value="${redis_port}"/>
        <property name="timeout" value="${redis_timeout}"/>
        <property name="database" value="${redis_database}"/>
        <property name="password" value="${redis_password}"/>
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>

        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/></property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/></property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/></property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/></property>
    </bean>
</beans>